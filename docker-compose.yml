version: "3"

services:
  db:
    image: mysql:8.0
    container_name: db
    ports:
      - 3306:3306 # HOST:CONTAINER
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "1234"
      MYSQL_DATABASE: "mysql-db"
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./backend/mysql-db:/var/lib/mysql #이거?
    # healthcheck:
    #   test: echo 'db.stats().ok' | mysql db:3306 --quiet
    #   interval: 10s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 40s

  backend:
    build:
      context: ./backend

      args:
        DJANGO_ALLOWED_HOSTS: "*"
        DJANGO_SECRET_KEY: "*"
        DJANGO_CORS_ORIGIN_WHITELIST: "*"
    command: >
      ash -c "python wait_for_mysql.py &&
              python manage.py makemigrations hey_apple_app &&
              python manage.py migrate hey_apple_app &&
              python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    volumes:
      - ./backend/:/backend/
    expose:
      - 8000
  
  redis:
    image: redis:latest
    command: redis-server --port 6379
    container_name: "redis_server"
    environment:
      - REDIS_PASSWORD=1234
      - REDIS_HOST=redis
    labels:
      - "name=redis"
      - "mode=standalone"
    volumes:
      - ./backend/redis:/redis
    ports:
      - 6379:6379


  # crawling:
  #   platform: linux/amd64
  #   build:
  #     context: ./crawling
  #   # command: >     
  #   #   sh -c "python fruits_crawling.py &&
  #   #           python pymongo_tut.py"
  #   ports:
  #     - 8010:8010
  #   # volumes:
  #   #   - ./crawling/:/crawling/
  #   expose:
  #     - 8010
  #   tty: true



  crawling:
    build: ./crawling
    shm_size: 2gb
    user: root

    command: >
      sh -c "python3 fruits_crawling.py &&
              python3 pymongo_tut.py"

    # command: >
    #   sh -c "python3 pymongo_tut.py"    

    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    tty: true

  # selenium-hub:
  #   image: selenium/hub:latest
  #   container_name: selenium-hub
  #   ports:
  #     - "4442:4442"
  #     - "4443:4443"
  #     - "4444:4444"


# nginx:
#       build:
#           context: './nginx'
#       command: ['nginx', '-g', 'daemon off;']
#       ports:
#           - 80:80
#       extra_hosts: 
#           - 'host.docker.internal:host-gateway'
#       expose:
#           - 80

# celery_worker:
#   container_name: celery_worker
#   build:
#     context: ./backend
#   volumes:
#     - ./backend:/backend
#   ports: [ ]
#   depends_on:
#     - rabbitmq
#     - backend
#   environment:
#     - C_FORCE_ROOT=true
#   command: sh -c "celery -A backend worker --loglevel=info"

# rabbitmq:
#   container_name: rabbitmq
#   image: rabbitmq:3-management-alpine
#   environment:
#     - RABBITMQ_USER=admin
#     - RABBITMQ_PASSWORD=admin
#   ports:
#     - "5672:5672" # Default Port
#     - "15672:15672" # UI Port
#   expose:
#     - "15672"
