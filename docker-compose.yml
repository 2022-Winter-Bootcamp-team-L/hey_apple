version: "3"

services:
  db:
    image: mysql:8.0
    container_name: db
    ports:
      - 3306:3306 # HOST:CONTAINER
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "1234"
      MYSQL_DATABASE: "mysql-db"
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./backend/mysql-db:/var/lib/mysql #이거?

  backend:
    build:
      context: ./backend
      args:
        DJANGO_ALLOWED_HOSTS: "*"
        DJANGO_SECRET_KEY: "*"
        DJANGO_CORS_ORIGIN_WHITELIST: "*"
    command: >
      ash -c "python wait_for_mysql.py &&
              python manage.py makemigrations hey_apple_app &&
              python manage.py migrate hey_apple_app &&
              python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    volumes:
      - ./backend/:/backend/
    expose:
      - 8000
    depends_on:
      - db
  redis:
    image: redis:latest
    command: redis-server --port 6379
    container_name: "redis_server"
    environment:
      - REDIS_PASSWORD=1234
      - REDIS_HOST=redis
    labels:
      - "name=redis"
      - "mode=standalone"
    volumes:
      - ./backend/redis:/redis
    ports:
      - 6379:6379
# nginx:
#       build:
#           context: './nginx'
#       command: ['nginx', '-g', 'daemon off;']
#       ports:
#           - 80:80
#       extra_hosts:
#           - 'host.docker.internal:host-gateway'
#       expose:
#           - 80

# celery_worker:
#   container_name: celery_worker
#   build:
#     context: ./backend
#   volumes:
#     - ./backend:/backend
#   ports: [ ]
#   depends_on:
#     - rabbitmq
#     - backend
#   environment:
#     - C_FORCE_ROOT=true
#   command: sh -c "celery -A backend worker --loglevel=info"

# rabbitmq:
#   container_name: rabbitmq
#   image: rabbitmq:3-management-alpine
#   environment:
#     - RABBITMQ_USER=admin
#     - RABBITMQ_PASSWORD=admin
#   ports:
#     - "5672:5672" # Default Port
#     - "15672:15672" # UI Port
#   expose:
#     - "15672"
